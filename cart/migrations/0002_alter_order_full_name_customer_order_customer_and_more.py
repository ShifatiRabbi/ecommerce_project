# Generated by Django 5.2.6 on 2025-10-24 10:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cart', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='order',
            name='full_name',
            field=models.CharField(max_length=200),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('full_name', models.CharField(blank=True, max_length=200)),
                ('customer_type', models.CharField(choices=[('individual', 'Individual'), ('business', 'Business')], default='individual', max_length=20)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='Bangladesh', max_length=100)),
                ('preferences', models.JSONField(blank=True, default=dict)),
                ('newsletter_subscribed', models.BooleanField(default=True)),
                ('marketing_emails', models.BooleanField(default=True)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('last_order_date', models.DateTimeField(blank=True, null=True)),
                ('first_order_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='cart.customer'),
        ),
        migrations.CreateModel(
            name='CustomerCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('phone', 'Phone Call'), ('chat', 'Live Chat'), ('ticket', 'Support Ticket')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('pending', 'Pending')], default='sent', max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('response_received', models.BooleanField(default=False)),
                ('response_notes', models.TextField(blank=True)),
                ('template_used', models.CharField(blank=True, max_length=100)),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='cart.customer')),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer Communication',
                'verbose_name_plural': 'Customer Communications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('general', 'General Note'), ('support', 'Support Ticket'), ('complaint', 'Complaint'), ('praise', 'Praise'), ('follow_up', 'Follow Up')], default='general', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='cart.customer')),
            ],
            options={
                'verbose_name': 'Customer Note',
                'verbose_name_plural': 'Customer Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlockedCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('reason', models.CharField(choices=[('fraud', 'Fraudulent Activity'), ('abuse', 'Abusive Behavior'), ('spam', 'Spam Account'), ('chargeback', 'Frequent Chargebacks'), ('tos_violation', 'Terms of Service Violation'), ('payment_issue', 'Payment Issues'), ('other', 'Other')], default='other', max_length=50)),
                ('custom_reason', models.TextField(blank=True, help_text='Additional details about the blocking reason')),
                ('blocked_at', models.DateTimeField(auto_now_add=True)),
                ('block_until', models.DateTimeField(blank=True, help_text='Leave empty for permanent block', null=True)),
                ('previous_orders_count', models.PositiveIntegerField(default=0)),
                ('total_amount_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the blocking')),
                ('is_active', models.BooleanField(default=True)),
                ('auto_unblock_at', models.DateTimeField(blank=True, null=True)),
                ('blocked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blocked Customer',
                'verbose_name_plural': 'Blocked Customers',
                'ordering': ['-blocked_at'],
                'indexes': [models.Index(fields=['email'], name='cart_blocke_email_2f7e0e_idx'), models.Index(fields=['blocked_at'], name='cart_blocke_blocked_46256b_idx'), models.Index(fields=['is_active'], name='cart_blocke_is_acti_9e0782_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['email'], name='cart_custom_email_ef4748_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['is_active'], name='cart_custom_is_acti_9105fb_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['is_blocked'], name='cart_custom_is_bloc_ad855c_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['created_at'], name='cart_custom_created_3152a9_idx'),
        ),
    ]
